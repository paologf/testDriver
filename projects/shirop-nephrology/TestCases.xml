<?xml version="1.0" encoding="utf-8"?>
<!--Test Cases-->
<Project id="00010" name="shirop-nephrology" version="0.1">
  <testCases>
   
   <testCase id="1" sd="3" type="1" name="prova">
   	 <description>Test di prova1111</description>
     <requirements>
       <requirement>REQ-xxxxxx</requirement>
       </requirements> 
     <actions>
       <action id="1">Refresha la pagina</action>
     </actions>
     <responses>
       <response id="1">start1, start2</response>
     </responses>
   </testCase>

   <testCase id="2" sd="3" type="1" name="prova">
   	 <description>Test di prova222</description>
     <requirements>
       <requirement>REQ-xxxxxx</requirement>
       </requirements> 
     <actions>
       <action id="2">Refresha la pagina</action>
     </actions>
     <responses>
       <response id="2">prova</response>
     </responses>
   </testCase>

<!-- 
   <testCase id="1" sd="3" type="1" name="newPatientCreation1">
   	 <description>This test case is used for the creation of a new patient.</description>
     <requirements>
       <requirement>REQ-0501</requirement>
       </requirements> 
     <actions>
       <action id="1">Click on "Nuovo paziente" button</action>
     </actions>
     <responses>
       <response id="1">createNewPatient function of clinicalrecord.PatientEditor</response>
     </responses>
   </testCase>
 -->

<!-- 
   <testCase id="2" sd="3" type="1" name="newPatientCreation2">
   	 <description>This test case is used for the creation of a new patient.</description>
     <requirements>
       <requirement>REQ-0501</requirement>
       </requirements> 
     <actions>
       <action id="1">Click on "Nuovo paziente" button</action>
     </actions>
     <responses>
       <response id="1">newPatient function for clinicalrecord.PatientEditor</response>
     </responses>
   </testCase>
 -->

   <testCase id="3" sd="8" type="1" name="newPatientCreation3">
   	 <description>This test case is used for testing the deletion of an empty patient when close.</description>
     <requirements>
       <requirement>REQ-05</requirement>
       </requirements> 
     <actions>
       <action id="1">Click on "Nuovo paziente" button</action>
       <action id="2">Close newPatient clicking on "Chiudi paziente" button</action>       
     </actions>
     <responses>
       <response id="1">newPatient function for clinicalrecord.PatientEditor</response>
       <response id="2">onClosePatientConfirmed function of Controller.js, isEmptyPatient:true</response>       
     </responses>
   </testCase>

   <testCase id="4" sd="8" type="1" name="newPatientCreation3">
   	 <description>This test case is used for testing the deletion of an empty patient when close.</description>
     <requirements>
       <requirement>REQ-05</requirement>
       </requirements> 
     <actions>
       <action id="1">Click on "Nuovo paziente" button</action>
       <action id="2">Close newPatient clicking on "Chiudi paziente" button</action>       
     </actions>
     <responses>
       <response id="1">newPatient function for clinicalrecord.PatientEditor</response>
       <response id="2">end of closePatientConfirmed function of Controller.js</response>       
     </responses>
   </testCase>
   
   <testCase id="5" sd="4" type="1" name="openExistingPatient">
   	 <description>This test case is used to test the opening of an existing patient.</description>
     <requirements>
       <requirement>REQ-0502</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
     </responses>
   </testCase>
   
   <testCase id="6" sd="4" type="1" name="openExistingPatient">
   	 <description>This test case is used for testing the closure of an existing patient without changes.</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Close currentPatient clicking on "Chiudi paziente" button</action>              
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">end of closePatientConfirmed function of Controller.js</response>              
     </responses>
   </testCase>

   <testCase id="7" sd="7" type="1" name="closePatientWithChanges1">
   	 <description>This test case is used for testing the closure of an existing patient after changes.</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on button "Nuovo paziente"</action>
       <action id="2">Modified patient data (at least fiscal code) and click on "Chiudi paziente"</action> 
       <action id="3">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">dijitController closePatient with guiModule form changed</response>              
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="8" sd="7" type="1" name="closePatientWithChanges2">
   	 <description>This test case is used for testing the closure of an existing patient after changes.</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on button "Nuovo paziente"</action>
       <action id="2">Modified patient data (at least fiscal code) and click on "Chiudi paziente"</action> 
       <action id="3">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">dijitController closePatient with guiModule form changed</response>              
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="9" sd="7" type="1" name="closePatientWithChanges3">
   	 <description>This test case is used for testing the closure of an existing patient after changes.</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on button "Nuovo paziente"</action>
       <action id="2">Modified patient data (at least fiscal code) and click on "Chiudi paziente"</action> 
       <action id="3">Click on "Annulla" on dialog</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">dijitController closePatient with guiModule form changed</response>              
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="10" sd="7" type="1" name="savePatient1">
   	 <description>This test case is used for testing the saving of a new patient</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on button "Nuovo paziente"</action>
       <action id="2">Modified patient and click on "Salva" button</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">PatientDetailEditor.post saving patient data</response>              
     </responses>
   </testCase>

   <testCase id="11" sd="9" type="1" name="savePatient2">
   	 <description>This test case is used for testing the saving of a changed patient</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Modified patient and click on "Salva" button</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">PatientDetailEditor.post saving patient data</response>              
     </responses>
   </testCase>
   
<!--testing per la creazione di ogni sigola instanza, iniziamo dalla creazione degli eventi , poi visite e altro.. -->   
   
<!--eventi, nella requirement list sono da aggiungere gli eventi-->   

   <testCase id="12" sd="22" type="1" name="createNewEvent1">
   	 <description>This test case is used for testing the creation of a new event</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Click on "Aggiungi evento" button</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor.addNewItemConfirmed creating new event</response>           
     </responses>
   </testCase>
   
   <testCase id="13" sd="4" type="1" name="createNewEvent2">
   	 <description>This test case is used for testing saving new event</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Click on "Aggiungi evento" button</action> 
       <action id="4">Edit at least the context type and the start date field, then click on "Salva" button</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor.addNewItemConfirmed creating new event</response>
       <response id="4">EventEditor.post saving event data</response>
     </responses>
   </testCase>
   
   <testCase id="14" sd="4" type="1" name="createNewEvent3">
   	 <description>This test case is used for testing saving new event using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Click on "Aggiungi evento" button</action> 
       <action id="4">Edit at least the context type and the start date field, then click on "Aggiungi evento" button</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor.addNewItemConfirmed creating new event</response>
       <response id="4">clicked add event button</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="15" sd="4" type="1" name="createNewEvent4">
   	 <description>This test case is used to testing not saving new event using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Click on "Aggiungi evento" button</action> 
       <action id="4">Edit at least the context type and the start date field, then click on "Aggiungi evento" button</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor.addNewItemConfirmed creating new event</response>
       <response id="4">clicked add event button</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="16" sd="4" type="1" name="createNewEvent5">
   	 <description>This test case is used to testing going back to edit event using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Click on "Aggiungi evento" button</action> 
       <action id="4">Edit at least the context type and the start date field, then click on "Aggiungi evento" button</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor.addNewItemConfirmed creating new event</response>
       <response id="4">clicked add event button</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="17" sd="4" type="1" name="createNewEvent6">
   	 <description>This test case is used for testing saving event modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one field, then click on "Aggiungi evento" button</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">clicked add event button</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="18" sd="4" type="1" name="createNewEvent7">
   	 <description>This test case is used to testing not saving event modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one date field, then click on "Aggiungi evento" button</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">clicked add event button</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="19" sd="4" type="1" name="createNewEvent8">
   	 <description>This test case is used to testing going back to edit event on an modified event using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one field, then click on "Aggiungi evento" button</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">clicked add event button</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="20" sd="4" type="1" name="switch event1">
   	 <description>This test case is used for testing saving event modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one field, then double click on another event</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="21" sd="4" type="1" name="switch event2">
   	 <description>This test case is used to testing not saving event modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one field, then double click on another event</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="22" sd="4" type="1" name="switch event3">
   	 <description>This test case is used to testing going back to edit event on an modified event using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one field, then double click on another event</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   
   
   <!-- creare un evento e muoversi con il calendario-->   
   
   <testCase id="23" sd="4" type="1" name="switch event using calendar 1">
   	 <description>This test case is used for testing saving new event moving to another event using calendar</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Click on "Aggiungi evento" button</action> 
       <action id="4">Edit at least the context type and the start date field, then click on another event into the calendar on the left</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">clicked add event button</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="24" sd="4" type="1" name="switch event using calendar 2">
   	 <description>This test case is used to testing not saving event modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Click on "Aggiungi evento" button</action> 
       <action id="4">Edit at least the context type and the start date field, then click on another event into the calendar on the left</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">clicked add event button</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="25" sd="4" type="1" name="switch event using calendar 3">
   	 <description>This test case is used to testing going back to edit event on an modified event using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Click on "Aggiungi evento" button</action> 
       <action id="4">Edit at least the context type and the start date field, then click on another event into the calendar on the left</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">clicked add event button</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <!-- modificare un evento e muoversi con il calendario-->
   <testCase id="26" sd="4" type="1" name="switch event1">
   	 <description>This test case is used for testing saving event modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one field, then click on another event into the calendar on the left</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="27" sd="4" type="1" name="switch event2">
   	 <description>This test case is used to testing not saving event modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one field, then click on another event into the calendar on the left</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="28" sd="4" type="1" name="switch event3">
   	 <description>This test case is used to testing going back to edit event on an modified event using the dialog panel</description>
     <requirements>
       <requirement>REQ-0501</requirement><!--controllare il requirement-->
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an event</action> 
       <action id="4">Edit at least one field, then click on another event into the calendar on the left</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor_Dijit, dataGridWidget double click on event</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
<!--Visite, fare come gli eventi-->   
   
   <testCase id="28" sd="22" type="1" name="createNewVisit1">
   	 <description>This test case is used for testing the creation of a new visit</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor.addNewItemConfirmed creating new visit</response>           
     </responses>
   </testCase>
   
   <testCase id="29" sd="4" type="1" name="createNewVisit2">
   	 <description>This test case is used for testing saving new visit</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on "Salva" button</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor.addNewItemConfirmed creating new visit</response>           
       <response id="4">VisitEditor.post saving visit data</response>
     </responses>
   </testCase>
   
   <testCase id="30" sd="4" type="1" name="createNewVisit3">
   	 <description>This test case is used for testing saving new visit using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on "Aggiungi visita" button</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor.addNewItemConfirmed creating new visit</response>
       <response id="4">clicked add visit button</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="31" sd="4" type="1" name="createNewVisit4">
   	 <description>This test case is used to testing not saving new visit using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on "Aggiungi visita" button</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show EventEditor module</response>    
       <response id="3">EventEditor.addNewItemConfirmed creating new event</response>
       <response id="4">clicked add event button</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="32" sd="4" type="1" name="createNewVisit5">
   	 <description>This test case is used to testing going back to edit visit using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on "Aggiungi visita" button</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor.addNewItemConfirmed creating new visit</response>
       <response id="4">clicked add visit button</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="33" sd="4" type="1" name="createNewVisit6">
   	 <description>This test case is used for testing saving visit modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on "Aggiungi visita" button</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">clicked add visit button</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="34" sd="4" type="1" name="createNewVisit7">
   	 <description>This test case is used to testing not saving visit modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on "Aggiungi visita" button</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">clicked add visit button</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="35" sd="4" type="1" name="createNewVisit8">
   	 <description>This test case is used to testing going back to edit visit on an modified visit using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on "Aggiungi visita" button</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">clicked add visit button</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="36" sd="4" type="1" name="switch visit 1">
   	 <description>This test case is used for testing saving visit modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least one field, then double click on another visit</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="37" sd="4" type="1" name="switch visit 2">
   	 <description>This test case is used to testing not saving visit modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Eventi" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least one field, then double click on another visit</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="38" sd="4" type="1" name="switch visit 3">
   	 <description>This test case is used to testing going back to edit visit on an modified visit using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least one field, then double click on another visit</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   
   
   <!-- creare una visita e muoversi con il calendario-->   
   
   <testCase id="39" sd="4" type="1" name="switch visit using calendar 1">
   	 <description>This test case is used for testing saving new visit moving to another visit using calendar</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on another visit into the calendar on the left</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">clicked add visit button</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="40" sd="4" type="1" name="switch visit using calendar 2">
   	 <description>This test case is used to testing not saving visit modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on another visit into the calendar on the left</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">clicked add visit button</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="41" sd="4" type="1" name="switch visit using calendar 3">
   	 <description>This test case is used to testing going back to edit visit on an modified visit using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (incluse into event date), then click on another visit into the calendar on the left</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">clicked add visit button</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <!-- modificare una visita e muoversi con il calendario-->
   <testCase id="42" sd="4" type="1" name="switch visit 1">
   	 <description>This test case is used for testing saving visit modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least one field, then click on another visit into the calendar on the left</action> 
       <action id="5">Click on "Si" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <testCase id="43" sd="4" type="1" name="switch visit 3">
   	 <description>This test case is used to testing not saving visit modified using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least one field, then click on another visit into the calendar on the left</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="44" sd="4" type="1" name="switch visit 3">
   	 <description>This test case is used to testing going back to edit visit on an modified visit using the dialog panel</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Double click on an visit</action> 
       <action id="4">Edit at least one field, then click on another visit into the calendar on the left</action> 
       <action id="5">Click on "Annulla" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor_Dijit, dataGridWidget double click on visit</response>
       <response id="4">CalendarNav setSessionModelIndex</response>
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
 
 <!--creazione di una vista senza l'evento-->
   <testCase id="45" sd="4" type="1" name="new visit without event">
   	 <description>This test case is used to testing the creation of a visit out of an event</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (out of event date), then click on "Salva" button</action> 
       <action id="5">Click on "No" on dialog panel</action> 
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor.addNewItemConfirmed creating new visit</response>           
       <response id="4">VisitEditor.post event not found</response>
       <response id="5">VisitEditor_Dijit new event creation dialog: clicked no</response>
     </responses>
   </testCase>
 
   <testCase id="46" sd="4" type="1" name="new visit without event">
   	 <description>This test case is used to testing the creation of a visit out of an event</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" label on the left</action> 
       <action id="3">Click on "Aggiungi visita" button</action> 
       <action id="4">Edit at least the visit type and the start date field (out of event date), then click on "Salva" button</action> 
       <action id="5">Click on "Si" on dialog panel</action>
       <action id="6">Edit event form with valid value for current visit and save</action>
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">show VisitEditor module</response>    
       <response id="3">VisitEditor.addNewItemConfirmed creating new visit</response>           
       <response id="4">VisitEditor.post event not found</response>
       <response id="5">VisitEditor_Dijit new event creation dialog: clicked yes</response>
       <response id="6">VisitEditor.postEvent saving event data</response>
     </responses>
   </testCase>
 
   <testCase id="47" sd="4" type="1" name="open a visit from initial grid">
   	 <description>This test case is used to testing the opening of a visit from generic visit grid</description>
     <requirements>
       <requirement>REQ-0603</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on a visit of generic visit data grid</action>
     </actions>
     <responses>
       <response id="1">show VisitEditor module</response>
     </responses>
   </testCase>
   
   
<!--blood module-->   

   <testCase id="48" sd="22" type="1" name="new blood exam creation">
   	 <description>This test case is used to testing the creation of a new blood exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module</action>
       <action id="2">Click on "Aggiungi esame" button</action>
       <action id="3">Add date and time of the exam and click on "Salva" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked add blood exam button</response>
       <response id="3">BloodEditor.post saving blood exam data</response>
     </responses>
   </testCase>

   <testCase id="50" sd="12" type="1" name="navigate next blood exam 1">
   	 <description>This test case is used to testing the navigation to next blood exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with two or more exams</action>
       <action id="2">Click on "Succ" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked nextButton, go to next exam</response>
     </responses>
   </testCase>
   
   <testCase id="51" sd="12" type="1" name="navigate next blood exam 2">
   	 <description>This test case is used to testing the navigation to next blood exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
   <testCase id="52" sd="12" type="1" name="navigate next blood exam 3">
   	 <description>This test case is used to testing the navigation to next blood exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
    <testCase id="53" sd="12" type="1" name="navigate next blood exam 4">
   	 <description>This test case is used to testing the navigation to next blood exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   <testCase id="54" sd="12" type="1" name="navigate previous blood exam 1">
   	 <description>This test case is used to testing the navigation to previous blood exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with two or more exams</action>
       <action id="2">Click on "Prec" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked prevButton, go to prev exam</response>
     </responses>
   </testCase>
   
   <testCase id="55" sd="12" type="1" name="navigate previous blood exam 2">
   	 <description>This test case is used to testing the navigation to previous blood exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
   <testCase id="56" sd="12" type="1" name="navigate previous blood exam 3">
   	 <description>This test case is used to testing the navigation to previous blood exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
    <testCase id="57" sd="12" type="1" name="navigate previous blood exam 4">
   	 <description>This test case is used to testing the navigation to previous blood exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="58" sd="15" type="1" name="show blood exams grid 1">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module</action>
       <action id="2">Click on "Mostra esami" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">show blood exams grid</response>
     </responses>
   </testCase>

    <testCase id="59" sd="15" type="1" name="show blood exams grid 2">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">show blood exams grid</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="60" sd="15" type="1" name="show blood exams grid 3">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">show blood exams grid</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="61" sd="15" type="1" name="show blood exams grid 4">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">show blood exams grid</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="62" sd="15" type="1" name="show blood exams grid 5">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Blood module with one or more exams</action>
       <action id="2">Click on "Mostra esami" button</action>
       <action id="3">Double click on an exam</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">show blood exams grid</response>
       <response id="3">BaseDijitModule, goToExam</response>       
     </responses>
   </testCase>
   
    <testCase id="63" sd="22" type="1" name="add blood exam 1">
   	 <description>This test case is used to testing adding new blood exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked add blood exam button</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="64" sd="22" type="1" name="add blood exam 2">
   	 <description>This test case is used to testing adding new blood exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked add blood exam button</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="65" sd="22" type="1" name="add blood exam 3">
   	 <description>This test case is used to testing adding new blood exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">clicked add blood exam button</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="66" sd="13" type="1" name="switch blood exam using calendar 1">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module with two or more exams</action>
       <action id="2">Click on another exam into the calendar on the left</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
     </responses>
   </testCase>

    <testCase id="67" sd="13" type="1" name="switch blood exam using calendar 2">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="68" sd="13" type="1" name="switch blood exam using calendar 3">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="69" sd="13" type="1" name="switch blood exam using calendar 4">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>


    <testCase id="70" sd="23" type="1" name="change blood module 1">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module</action>
       <action id="2">Click on Urine module</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
     </responses>
   </testCase>

    <testCase id="71" sd="23" type="1" name="change blood module 2">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="72" sd="23" type="1" name="change blood module 3">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="73" sd="23" type="1" name="change blood module 4">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Blood module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   
   
<!--urine module-->   

   <testCase id="74" sd="22" type="1" name="new urine exam creation">
   	 <description>This test case is used to testing the creation of a new urine exam</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module</action>
       <action id="2">Click on "Aggiungi esame" button</action>
       <action id="3">Add date and time of the exam and click on "Salva" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked add urine exam button</response>
       <response id="3">UrineEditor.post saving urine exam data</response>
     </responses>
   </testCase>

   <testCase id="75" sd="12" type="1" name="navigate next urine exam 1">
   	 <description>This test case is used to testing the navigation to next urine exam</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with two or more exams</action>
       <action id="2">Click on "Succ" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked nextButton, go to next exam</response>
     </responses>
   </testCase>
   
   <testCase id="76" sd="12" type="1" name="navigate next urine exam 2">
   	 <description>This test case is used to testing the navigation to next urine exam when edited</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
   <testCase id="77" sd="12" type="1" name="navigate next urine exam 3">
   	 <description>This test case is used to testing the navigation to next urine exam when edited</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
    <testCase id="78" sd="12" type="1" name="navigate next urine exam 4">
   	 <description>This test case is used to testing the navigation to next urine exam when edited</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   <testCase id="79" sd="12" type="1" name="navigate previous urine exam 1">
   	 <description>This test case is used to testing the navigation to previous urine exam</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with two or more exams</action>
       <action id="2">Click on "Prec" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked prevButton, go to prev exam</response>
     </responses>
   </testCase>
   
   <testCase id="80" sd="12" type="1" name="navigate previous urine exam 2">
   	 <description>This test case is used to testing the navigation to previous urine exam when edited</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
   <testCase id="81" sd="12" type="1" name="navigate previous urine exam 3">
   	 <description>This test case is used to testing the navigation to previous urine exam when edited</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
    <testCase id="82" sd="12" type="1" name="navigate previous urine exam 4">
   	 <description>This test case is used to testing the navigation to previous urine exam when edited</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="83" sd="15" type="1" name="show urine exams grid 1">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module</action>
       <action id="2">Click on "Mostra esami" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">show urine exams grid</response>
     </responses>
   </testCase>

    <testCase id="84" sd="15" type="1" name="show urine exams grid 2">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">show urine exams grid</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="85" sd="15" type="1" name="show urine exams grid 3">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">show urine exams grid</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="86" sd="15" type="1" name="show urine exams grid 4">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">show urine exams grid</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="87" sd="15" type="1" name="show urine exams grid 5">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Urine module with one or more exams</action>
       <action id="2">Click on "Mostra esami" button</action>
       <action id="3">Double click on an exam</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">show urine exams grid</response>
       <response id="3">BaseDijitModule, goToExam</response>       
     </responses>
   </testCase>
   
    <testCase id="88" sd="22" type="1" name="add urine exam 1">
   	 <description>This test case is used to testing adding new urine exam</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked add urine exam button</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="89" sd="22" type="1" name="add urine exam 2">
   	 <description>This test case is used to testing adding new urine exam</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked add urine exam button</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="90" sd="22" type="1" name="add urine exam 3">
   	 <description>This test case is used to testing adding new urine exam</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">clicked add urine exam button</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="91" sd="13" type="1" name="switch urine exam using calendar 1">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module with two or more exams</action>
       <action id="2">Click on another exam into the calendar on the left</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
     </responses>
   </testCase>

    <testCase id="92" sd="13" type="1" name="switch urine exam using calendar 2">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="93" sd="13" type="1" name="switch urine exam using calendar 3">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="94" sd="13" type="1" name="switch urine exam using calendar 4">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>


    <testCase id="95" sd="23" type="1" name="change urine module 1">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module</action>
       <action id="2">Click on Blood module</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
     </responses>
   </testCase>

    <testCase id="96" sd="23" type="1" name="change urine module 2">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module</action>
       <action id="2">Edit at least one field, then click on Blood module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="97" sd="23" type="1" name="change urine module 3">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module</action>
       <action id="2">Edit at least one field, then click on Blood module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="98" sd="23" type="1" name="change urine module 4">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0702</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Urine module</action>
       <action id="2">Edit at least one field, then click on Blood module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:BloodEditor</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>



<!--weightpressure module-->   

   <testCase id="99" sd="22" type="1" name="new weightpressure exam creation">
   	 <description>This test case is used to testing the creation of a new weightpressure exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module</action>
       <action id="2">Click on "Aggiungi esame" button</action>
       <action id="3">Add date and time of the exam and click on "Salva" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked add weightpressure exam button</response>
       <response id="3">WeightPressureEditor.post saving weightpressure exam data</response>
     </responses>
   </testCase>

   <testCase id="100" sd="12" type="1" name="navigate next weightpressure exam 1">
   	 <description>This test case is used to testing the navigation to next weightpressure exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with two or more exams</action>
       <action id="2">Click on "Succ" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked nextButton, go to next exam</response>
     </responses>
   </testCase>
   
   <testCase id="101" sd="12" type="1" name="navigate next weightpressure exam 2">
   	 <description>This test case is used to testing the navigation to next weightpressure exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
   <testCase id="102" sd="12" type="1" name="navigate next weightpressure exam 3">
   	 <description>This test case is used to testing the navigation to next weightpressure exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
    <testCase id="103" sd="12" type="1" name="navigate next weightpressure exam 4">
   	 <description>This test case is used to testing the navigation to next weightpressure exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   <testCase id="104" sd="12" type="1" name="navigate previous weightpressure exam 1">
   	 <description>This test case is used to testing the navigation to previous weightpressure exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with two or more exams</action>
       <action id="2">Click on "Prec" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked prevButton, go to prev exam</response>
     </responses>
   </testCase>
   
   <testCase id="105" sd="12" type="1" name="navigate previous weightpressure exam 2">
   	 <description>This test case is used to testing the navigation to previous weightpressure exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
   <testCase id="106" sd="12" type="1" name="navigate previous weightpressure exam 3">
   	 <description>This test case is used to testing the navigation to previous weightpressure exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
    <testCase id="107" sd="12" type="1" name="navigate previous weightpressure exam 4">
   	 <description>This test case is used to testing the navigation to previous weightpressure exam when edited</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="108" sd="15" type="1" name="show weightpressure exams grid 1">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module</action>
       <action id="2">Click on "Mostra esami" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">show weightpressure exams grid</response>
     </responses>
   </testCase>

    <testCase id="109" sd="15" type="1" name="show weightpressure exams grid 2">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">show weightpressure exams grid</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="110" sd="15" type="1" name="show weightpressure exams grid 3">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">show weightpressure exams grid</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="111" sd="15" type="1" name="show weightpressure exams grid 4">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">show weightpressure exams grid</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="112" sd="15" type="1" name="show weightpressure exams grid 5">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a WeightPressure module with one or more exams</action>
       <action id="2">Click on "Mostra esami" button</action>
       <action id="3">Double click on an exam</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">show weightpressure exams grid</response>
       <response id="3">BaseDijitModule, goToExam</response>       
     </responses>
   </testCase>
   
    <testCase id="113" sd="22" type="1" name="add weightpressure exam 1">
   	 <description>This test case is used to testing adding new weightpressure exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked add weightpressure exam button</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="114" sd="22" type="1" name="add weightpressure exam 2">
   	 <description>This test case is used to testing adding new weightpressure exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked add weightpressure exam button</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="115" sd="22" type="1" name="add weightpressure exam 3">
   	 <description>This test case is used to testing adding new weightpressure exam</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">clicked add weightpressure exam button</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="116" sd="13" type="1" name="switch weightpressure exam using calendar 1">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module with two or more exams</action>
       <action id="2">Click on another exam into the calendar on the left</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
     </responses>
   </testCase>

    <testCase id="117" sd="13" type="1" name="switch weightpressure exam using calendar 2">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="118" sd="13" type="1" name="switch weightpressure exam using calendar 3">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="119" sd="13" type="1" name="switch weightpressure exam using calendar 4">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>


    <testCase id="120" sd="23" type="1" name="change weightpressure module 1">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module</action>
       <action id="2">Click on Urine module</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
     </responses>
   </testCase>

    <testCase id="121" sd="23" type="1" name="change weightpressure module 2">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="122" sd="23" type="1" name="change weightpressure module 3">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="123" sd="23" type="1" name="change weightpressure module 4">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0703</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in WeightPressure module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:WeightPressureEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   
   






<!--referted module-->   

   <testCase id="124" sd="22" type="1" name="new referted exam creation">
   	 <description>This test case is used to testing the creation of a new referted exam</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module</action>
       <action id="2">Click on "Aggiungi esame" button</action>
       <action id="3">Add date and time of the exam and click on "Salva" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked add referted exam button</response>
       <response id="3">RefertedExamEditor.post saving referted exam data</response>
     </responses>
   </testCase>

   <testCase id="125" sd="12" type="1" name="navigate next referted exam 1">
   	 <description>This test case is used to testing the navigation to next referted exam</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with two or more exams</action>
       <action id="2">Click on "Succ" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked nextButton, go to next exam</response>
     </responses>
   </testCase>
   
   <testCase id="126" sd="12" type="1" name="navigate next referted exam 2">
   	 <description>This test case is used to testing the navigation to next referted exam when edited</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
   <testCase id="127" sd="12" type="1" name="navigate next referted exam 3">
   	 <description>This test case is used to testing the navigation to next referted exam when edited</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
   <testCase id="128" sd="12" type="1" name="navigate next referted exam 4">
   	 <description>This test case is used to testing the navigation to next referted exam when edited</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   <testCase id="129" sd="12" type="1" name="navigate previous referted exam 1">
   	 <description>This test case is used to testing the navigation to previous referted exam</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with two or more exams</action>
       <action id="2">Click on "Prec" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked prevButton, go to prev exam</response>
     </responses>
   </testCase>
   
   <testCase id="130" sd="12" type="1" name="navigate previous referted exam 2">
   	 <description>This test case is used to testing the navigation to previous referted exam when edited</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
   <testCase id="131" sd="12" type="1" name="navigate previous referted exam 3">
   	 <description>This test case is used to testing the navigation to previous referted exam when edited</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
    <testCase id="132" sd="12" type="1" name="navigate previous referted exam 4">
   	 <description>This test case is used to testing the navigation to previous referted exam when edited</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with two or more exams</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="133" sd="15" type="1" name="show referted exams grid 1">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module</action>
       <action id="2">Click on "Mostra esami" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">show referted exams grid</response>
     </responses>
   </testCase>

    <testCase id="134" sd="15" type="1" name="show referted exams grid 2">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">show referted exams grid</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="135" sd="15" type="1" name="show referted exams grid 3">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">show referted exams grid</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="136" sd="15" type="1" name="show referted exams grid 4">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">show referted exams grid</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="137" sd="15" type="1" name="show referted exams grid 5">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a RefertedExam module with one or more exams</action>
       <action id="2">Click on "Mostra esami" button</action>
       <action id="3">Double click on an exam</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">show referted exams grid</response>
       <response id="3">BaseDijitModule, goToExam</response>       
     </responses>
   </testCase>
   
    <testCase id="138" sd="22" type="1" name="add referted exam 1">
   	 <description>This test case is used to testing adding new referted exam</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked add referted exam button</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="139" sd="22" type="1" name="add referted exam 2">
   	 <description>This test case is used to testing adding new referted exam</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked add referted exam button</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="140" sd="22" type="1" name="add referted exam 3">
   	 <description>This test case is used to testing adding new referted exam</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module</action>
       <action id="2">Edit an exam and click on "Aggiungi esame" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">clicked add referted exam button</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="141" sd="13" type="1" name="switch referted exam using calendar 1">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module with two or more exams</action>
       <action id="2">Click on another exam into the calendar on the left</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
     </responses>
   </testCase>

    <testCase id="142" sd="13" type="1" name="switch referted exam using calendar 2">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="143" sd="13" type="1" name="switch referted exam using calendar 3">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="144" sd="13" type="1" name="switch referted exam using calendar 4">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>


    <testCase id="145" sd="23" type="1" name="change referted module 1">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module</action>
       <action id="2">Click on Urine module</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
     </responses>
   </testCase>

    <testCase id="146" sd="23" type="1" name="change referted module 2">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="147" sd="23" type="1" name="change referted module 3">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="148" sd="23" type="1" name="change referted module 4">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0704</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in RefertedExam module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:RefertedExamEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>





<!--admission module-->   

   <testCase id="149" sd="22" type="1" name="new admission creation">
   	 <description>This test case is used to testing the creation of a new admission</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module</action>
       <action id="2">Click on "Aggiungi ricovero" button</action>
       <action id="3">Add date and time of the exam and click on "Salva" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked add admission button</response>
       <response id="3">AdmissionEditor.post saving admission data</response>
     </responses>
   </testCase>

   <testCase id="150" sd="12" type="1" name="navigate next admission 1">
   	 <description>This test case is used to testing the navigation to next admission</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Admission module with two or more instances</action>
       <action id="2">Click on "Succ" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked nextButton, go to next exam</response>
     </responses>
   </testCase>
   
   <testCase id="151" sd="12" type="1" name="navigate next admission 2">
   	 <description>This test case is used to testing the navigation to next admission when edited</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Admission module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
   <testCase id="152" sd="12" type="1" name="navigate next admission 3">
   	 <description>This test case is used to testing the navigation to next admission when edited</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Admission module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
    <testCase id="153" sd="12" type="1" name="navigate next admission 4">
   	 <description>This test case is used to testing the navigation to next admission when edited</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Admission module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   <testCase id="154" sd="12" type="1" name="navigate previous admission 1">
   	 <description>This test case is used to testing the navigation to previous admission</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Admission module with two or more instances</action>
       <action id="2">Click on "Prec" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked prevButton, go to prev exam</response>
     </responses>
   </testCase>
   
   <testCase id="155" sd="12" type="1" name="navigate previous admission 2">
   	 <description>This test case is used to testing the navigation to previous admission when edited</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Admission module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
   <testCase id="156" sd="12" type="1" name="navigate previous admission 3">
   	 <description>This test case is used to testing the navigation to previous admission when edited</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Admission module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
    <testCase id="157" sd="12" type="1" name="navigate previous admission 4">
   	 <description>This test case is used to testing the navigation to previous admission when edited</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Admission module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="158" sd="15" type="1" name="show admissions grid 1">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Admission module</action>
       <action id="2">Click on "Mostra esami" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">show admissions grid</response>
     </responses>
   </testCase>

    <testCase id="159" sd="15" type="1" name="show admissions grid 2">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Admission module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">show admissions grid</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="160" sd="15" type="1" name="show admissions grid 3">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Admission module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">show admissions grid</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="161" sd="15" type="1" name="show admissions grid 4">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Admission module with one or more exams</action>
       <action id="2">Edit or modify any field, then click on "Mostra esami" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">show admissions grid</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="162" sd="15" type="1" name="show admissions grid 5">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Admission module with one or more exams</action>
       <action id="2">Click on "Mostra esami" button</action>
       <action id="3">Double click on an exam</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">show admissions grid</response>
       <response id="3">BaseDijitModule, goToExam</response>       
     </responses>
   </testCase>
   
    <testCase id="163" sd="22" type="1" name="add admission 1">
   	 <description>This test case is used to testing adding new admission</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module</action>
       <action id="2">Edit an exam and click on "Aggiungi ricovero" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked add admission button</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="164" sd="22" type="1" name="add admission 2">
   	 <description>This test case is used to testing adding new admission</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module</action>
       <action id="2">Edit an exam and click on "Aggiungi ricovero" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked add admission button</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="165" sd="22" type="1" name="add admission 3">
   	 <description>This test case is used to testing adding new admission</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module</action>
       <action id="2">Edit an exam and click on "Aggiungi ricovero" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">clicked add admission button</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="166" sd="13" type="1" name="switch admission using calendar 1">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module with two or more exams</action>
       <action id="2">Click on another exam into the calendar on the left</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
     </responses>
   </testCase>

    <testCase id="167" sd="13" type="1" name="switch admission using calendar 2">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="168" sd="13" type="1" name="switch admission using calendar 3">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="169" sd="13" type="1" name="switch admission using calendar 4">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>


    <testCase id="170" sd="23" type="1" name="change weightpressure module 1">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module</action>
       <action id="2">Click on Urine module</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
     </responses>
   </testCase>

    <testCase id="171" sd="23" type="1" name="change weightpressure module 2">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="172" sd="23" type="1" name="change weightpressure module 3">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="173" sd="23" type="1" name="change weightpressure module 4">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0601</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Admission module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:AdmissionEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   


<!--therapy module-->   

   <testCase id="174" sd="22" type="1" name="new therapy creation">
   	 <description>This test case is used to testing the creation of a new therapy</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module</action>
       <action id="2">Click on "Aggiungi terapia" button</action>
       <action id="3">Add date and time of the exam and click on "Salva" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked add therapy button</response>
       <response id="3">TherapyEditor.post saving therapy data</response>
     </responses>
   </testCase>

   <testCase id="175" sd="12" type="1" name="navigate next therapy 1">
   	 <description>This test case is used to testing the navigation to next therapy</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Therapy module with two or more instances</action>
       <action id="2">Click on "Succ" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked nextButton, go to next exam</response>
     </responses>
   </testCase>
   
   <testCase id="176" sd="12" type="1" name="navigate next therapy 2">
   	 <description>This test case is used to testing the navigation to next therapy when edited</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Therapy module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
   <testCase id="177" sd="12" type="1" name="navigate next therapy 3">
   	 <description>This test case is used to testing the navigation to next therapy when edited</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Therapy module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
    <testCase id="178" sd="12" type="1" name="navigate next therapy 4">
   	 <description>This test case is used to testing the navigation to next therapy when edited</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Therapy module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   <testCase id="179" sd="12" type="1" name="navigate previous therapy 1">
   	 <description>This test case is used to testing the navigation to previous therapy</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Therapy module with two or more instances</action>
       <action id="2">Click on "Prec" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked prevButton, go to prev exam</response>
     </responses>
   </testCase>
   
   <testCase id="180" sd="12" type="1" name="navigate previous therapy 2">
   	 <description>This test case is used to testing the navigation to previous therapy when edited</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Therapy module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
   <testCase id="181" sd="12" type="1" name="navigate previous therapy 3">
   	 <description>This test case is used to testing the navigation to previous therapy when edited</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Therapy module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
    <testCase id="182" sd="12" type="1" name="navigate previous therapy 4">
   	 <description>This test case is used to testing the navigation to previous therapy when edited</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an Therapy module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="183" sd="15" type="1" name="show therapy grid 1">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Therapy module</action>
       <action id="2">Click on "Mostra terapie" button</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">show therapy grid</response>
     </responses>
   </testCase>

    <testCase id="184" sd="15" type="1" name="show therapy grid 2">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Therapy module with one or more instances</action>
       <action id="2">Edit or modify any field, then click on "Mostra terapie" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">show therapy grid</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="185" sd="15" type="1" name="show therapy grid 3">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Therapy module with one or more instances</action>
       <action id="2">Edit or modify any field, then click on "Mostra terapie" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">show therapy grid</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="186" sd="15" type="1" name="show therapy grid 4">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Therapy module with one or more instances</action>
       <action id="2">Edit or modify any field, then click on "Mostra terapie" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">show therapy grid</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="187" sd="15" type="1" name="show therapy grid 5">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a Therapy module with one or more instances</action>
       <action id="2">Click on "Mostra terapie" button</action>
       <action id="3">Double click on an exam</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">show therapy grid</response>
       <response id="3">BaseDijitModule, goToExam</response>       
     </responses>
   </testCase>
   
    <testCase id="188" sd="22" type="1" name="add therapy 1">
   	 <description>This test case is used to testing adding new therapy</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module</action>
       <action id="2">Edit an exam and click on "Aggiungi terapia" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked add therapy button</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="189" sd="22" type="1" name="add therapy 2">
   	 <description>This test case is used to testing adding new therapy</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module</action>
       <action id="2">Edit an exam and click on "Aggiungi terapia" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked add therapy button</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="190" sd="22" type="1" name="add therapy 3">
   	 <description>This test case is used to testing adding new therapy</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module</action>
       <action id="2">Edit an exam and click on "Aggiungi terapia" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">clicked add therapy button</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="191" sd="13" type="1" name="switch therapy using calendar 1">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module with two or more exams</action>
       <action id="2">Click on another exam into the calendar on the left</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
     </responses>
   </testCase>

    <testCase id="192" sd="13" type="1" name="switch therapy using calendar 2">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="193" sd="13" type="1" name="switch therapy using calendar 3">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="194" sd="13" type="1" name="switch therapy using calendar 4">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>


    <testCase id="195" sd="23" type="1" name="change weightpressure module 1">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module</action>
       <action id="2">Click on Urine module</action>
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
     </responses>
   </testCase>

    <testCase id="196" sd="23" type="1" name="change weightpressure module 2">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="197" sd="23" type="1" name="change weightpressure module 3">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="198" sd="23" type="1" name="change weightpressure module 4">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0901</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in Therapy module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">changeSecondLevelModuleActive, moduleName:Visits, childName:TherapyEditor</response>
       <response id="2">changeSecondLevelModuleActive, moduleName:Visits, childName:UrineEditor</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>



   
 
<!--clinicalevent module-->   

   <testCase id="199" sd="22" type="1" name="new clinicalevent creation">
   	 <description>This test case is used to testing the creation of a new clinicalevent</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module</action>
       <action id="2">Click on "Aggiungi evento" button</action>
       <action id="3">Add date and time of the exam and click on "Salva" button</action>
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked add clinicalevent button</response>
       <response id="3">ClinicalEventEditor.post saving clinical event data</response>
     </responses>
   </testCase>

   <testCase id="200" sd="12" type="1" name="navigate next clinicalevent 1">
   	 <description>This test case is used to testing the navigation to next clinicalevent</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an ClinicalEvent module with two or more instances</action>
       <action id="2">Click on "Succ" button</action>
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked nextButton, go to next exam</response>
     </responses>
   </testCase>
   
   <testCase id="201" sd="12" type="1" name="navigate next clinicalevent 2">
   	 <description>This test case is used to testing the navigation to next clinicalevent when edited</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an ClinicalEvent module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
   <testCase id="202" sd="12" type="1" name="navigate next clinicalevent 3">
   	 <description>This test case is used to testing the navigation to next clinicalevent when edited</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an ClinicalEvent module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to next exam</response>       
     </responses>
   </testCase>
   
    <testCase id="203" sd="12" type="1" name="navigate next clinicalevent 4">
   	 <description>This test case is used to testing the navigation to next clinicalevent when edited</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an ClinicalEvent module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Succ" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked nextButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

   <testCase id="204" sd="12" type="1" name="navigate previous clinicalevent 1">
   	 <description>This test case is used to testing the navigation to previous clinicalevent</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an ClinicalEvent module with two or more instances</action>
       <action id="2">Click on "Prec" button</action>
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked prevButton, go to prev exam</response>
     </responses>
   </testCase>
   
   <testCase id="205" sd="12" type="1" name="navigate previous clinicalevent 2">
   	 <description>This test case is used to testing the navigation to previous clinicalevent when edited</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an ClinicalEvent module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
   <testCase id="206" sd="12" type="1" name="navigate previous clinicalevent 3">
   	 <description>This test case is used to testing the navigation to previous clinicalevent when edited</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an ClinicalEvent module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog, go to prev exam</response>       
     </responses>
   </testCase>
   
    <testCase id="207" sd="12" type="1" name="navigate previous clinicalevent 4">
   	 <description>This test case is used to testing the navigation to previous clinicalevent when edited</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in an ClinicalEvent module with two or more instances</action>
       <action id="2">Edit or modify any field, then click on "Prec" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked prevButton</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="208" sd="15" type="1" name="show clinicalevent grid 1">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a ClinicalEvent module</action>
       <action id="2">Click on "Mostra terapie" button</action>
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">show clinicalevent grid</response>
     </responses>
   </testCase>

    <testCase id="209" sd="15" type="1" name="show clinicalevent grid 2">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a ClinicalEvent module with one or more instances</action>
       <action id="2">Edit or modify any field, then click on "Mostra terapie" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">show clinicalevent grid</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="210" sd="15" type="1" name="show clinicalevent grid 3">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a ClinicalEvent module with one or more instances</action>
       <action id="2">Edit or modify any field, then click on "Mostra terapie" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">show clinicalevent grid</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="211" sd="15" type="1" name="show clinicalevent grid 4">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a ClinicalEvent module with one or more instances</action>
       <action id="2">Edit or modify any field, then click on "Mostra terapie" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">show clinicalevent grid</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="212" sd="15" type="1" name="show clinicalevent grid 5">
   	 <description>This test case is used to testing the showing of exams grid</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in a ClinicalEvent module with one or more instances</action>
       <action id="2">Click on "Mostra terapie" button</action>
       <action id="3">Double click on an exam</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">show clinicalevent grid</response>
       <response id="3">BaseDijitModule, goToExam</response>       
     </responses>
   </testCase>
   
    <testCase id="213" sd="22" type="1" name="add clinicalevent 1">
   	 <description>This test case is used to testing adding new clinicalevent</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module</action>
       <action id="2">Edit an exam and click on "Aggiungi evento" button</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked add clinicalevent button</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="214" sd="22" type="1" name="add clinicalevent 2">
   	 <description>This test case is used to testing adding new clinicalevent</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module</action>
       <action id="2">Edit an exam and click on "Aggiungi evento" button</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked add clinicalevent button</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="215" sd="22" type="1" name="add clinicalevent 3">
   	 <description>This test case is used to testing adding new clinicalevent</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module</action>
       <action id="2">Edit an exam and click on "Aggiungi evento" button</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">clicked add clinicalevent button</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>
   
    <testCase id="216" sd="13" type="1" name="switch clinicalevent using calendar 1">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module with two or more exams</action>
       <action id="2">Click on another exam into the calendar on the left</action>
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
     </responses>
   </testCase>

    <testCase id="217" sd="13" type="1" name="switch clinicalevent using calendar 2">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="218" sd="13" type="1" name="switch clinicalevent using calendar 3">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="219" sd="13" type="1" name="switch clinicalevent using calendar 4">
   	 <description>This test case is used to testing the switching of an exam using calendar</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module with two or more exams</action>
       <action id="2">Edit at least one field, then click on another exam into the calendar on the left</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">CalendarNav setSessionModelIndex</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>


    <testCase id="220" sd="23" type="1" name="change weightpressure module 1">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module</action>
       <action id="2">Click on "Visita - Degenza" module</action>
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Visit</response>
     </responses>
   </testCase>

    <testCase id="221" sd="23" type="1" name="change weightpressure module 2">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Visit</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="222" sd="23" type="1" name="change weightpressure module 3">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Visit</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>

    <testCase id="223" sd="23" type="1" name="change weightpressure module 4">
   	 <description>This test case is used to testing the changing of the current module</description>
     <requirements>
       <requirement>REQ-0605</requirement>
     </requirements> 
     <actions>
       <action id="1">Enter in ClinicalEvent module</action>
       <action id="2">Edit at least one field, then click on urine module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show ClinicalEventEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Visit</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>       
     </responses>
   </testCase>


<!--patient details-->
    <testCase id="224" sd="9" type="1" name="edit patient details 1">
   	 <description>This test case is used to testing the editing of patient details</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Edit at least one field, then click on "Salva" button</action>
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">PatientDetailEditor.post saving patient detail data</response>
     </responses>
   </testCase>


    <testCase id="225" sd="23" type="1" name="edit patient details 2">
   	 <description>This test case is used to testing the editing of patient details</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Click on "Visita - Degenza" module</action>
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Visit</response>
     </responses>
   </testCase>


    <testCase id="226" sd="23" type="1" name="edit patient details 3">
   	 <description>This test case is used to testing the editing of patient details</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Edit at least one field, then click on "Visita - Degenza" module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Visit</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

    <testCase id="227" sd="23" type="1" name="edit patient details 2">
   	 <description>This test case is used to testing the editing of patient details</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Edit at least one field, then click on "Visita - Degenza" module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Visit</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

    <testCase id="228" sd="23" type="1" name="edit patient details 2">
   	 <description>This test case is used to testing the editing of patient details</description>
     <requirements>
       <requirement>REQ-0502</requirement>
     </requirements> 
     <actions>
       <action id="1">Double click on existing patient</action>
       <action id="2">Edit at least one field, then click on "Visita - Degenza" module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Visit</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
   <!--gestione reparto-->

    <testCase id="229" sd="23" type="1" name="edit department details 1">
   	 <description>This test case is used to testing the editing of department details</description>
     <requirements>
       <requirement>REQ-0401</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto" button to enter in department details module</action>
       <action id="2">Click on "Personale" module</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:Personnel</response>
     </responses>
   </testCase>

    <testCase id="230" sd="23" type="1" name="edit department details 1">
   	 <description>This test case is used to testing the editing of department details</description>
     <requirements>
       <requirement>REQ-0401</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto" button to enter in department details module</action>
       <action id="2">Edit at least one field, then click on "Save" button</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">DepartmentDetailEditor.post saving department detail data</response>
     </responses>
   </testCase>


    <testCase id="231" sd="23" type="1" name="edit department details 1">
   	 <description>This test case is used to testing the editing of department details</description>
     <requirements>
       <requirement>REQ-0401</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto" button to enter in department details module</action>
       <action id="2">Edit at least one field, then click on "Personale" module</action>
       <action id="3">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response>
       <response id="3">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
       <testCase id="232" sd="23" type="1" name="edit department details 1">
   	 <description>This test case is used to testing the editing of department details</description>
     <requirements>
       <requirement>REQ-0401</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto" button to enter in department details module</action>
       <action id="2">Edit at least one field, then click on "Personale" module</action>
       <action id="3">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response>
       <response id="3">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

    <testCase id="233" sd="23" type="1" name="edit department details 1">
   	 <description>This test case is used to testing the editing of department details</description>
     <requirements>
       <requirement>REQ-0401</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto" button to enter in department details module</action>
       <action id="2">Edit at least one field, then click on "Personale" module</action>
       <action id="3">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response>
       <response id="3">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

<!--personale-->
   
   <testCase id="234" sd="22" type="1" name="create new personnel 1">
   	 <description>This test case is used for testing the creation of a new personnel</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left</action> 
       <action id="3">Click on "Aggiungi personale" label</action> 
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">clicked add personnel button</response> 
     </responses>
   </testCase>

   <testCase id="235" sd="22" type="1" name="create new personnel 2">
   	 <description>This test case is used for testing the creation of a new personnel</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left</action> 
       <action id="3">Click on "Aggiungi personale" label</action> 
       <action id="4">edit first name, surname and role field, then click on "Salva"</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">clicked add personnel button</response> 
       <response id="4">PersonnelEditor.post saving personnel data</response>        
     </responses>
   </testCase>

   <testCase id="236" sd="23" type="1" name="create new personnel 3">
   	 <description>This test case is used for testing the creation of a new personnel</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left</action> 
       <action id="3">Click on "Aggiungi personale" label</action> 
       <action id="4">edit first name, surname and role field, then click on "Aggiungi personale" button</action>
       <action id="5">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">clicked add personnel button</response> 
       <response id="4">clicked add personnel button</response>        
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="237" sd="23" type="1" name="create new personnel 4">
   	 <description>This test case is used for testing the creation of a new personnel</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left</action> 
       <action id="3">Click on "Aggiungi personale" label</action> 
       <action id="4">edit at least one field, then click on "Aggiungi personale" button</action>
       <action id="5">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">clicked add personnel button</response> 
       <response id="4">clicked add personnel button</response>        
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="238" sd="23" type="1" name="create new personnel 5">
   	 <description>This test case is used for testing the creation of a new personnel</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left</action> 
       <action id="3">Click on "Aggiungi personale" label</action> 
       <action id="4">edit at least one field, then click on "Aggiungi personale" button</action>
       <action id="5">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">clicked add personnel button</response> 
       <response id="4">clicked add personnel button</response>        
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="239" sd="24" type="1" name="switch personnel 1">
   	 <description>This test case is used for testing switching personnel from grid</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be two or more personnels into the module)</action> 
       <action id="3">Duble click on another personnel from the grid</action> 
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">PersonnelEditor_Dijit, dataGridWidget double click on personnel</response> 
     </responses>
   </testCase>

   
   <testCase id="240" sd="24" type="1" name="switch personnel 2">
   	 <description>This test case is used for testing switching personnel from grid</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be two or more personnels into the module)</action> 
       <action id="3">Edit at least one field, then duble click on another personnel from the grid</action>
       <action id="4">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">PersonnelEditor_Dijit, dataGridWidget double click on personnel</response> 
       <response id="4">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="241" sd="24" type="1" name="switch personnel 3">
   	 <description>This test case is used for testing switching personnel from grid</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be two or more personnels into the module)</action> 
       <action id="3">Edit at least one field, then duble click on another personnel from the grid</action>
       <action id="4">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">PersonnelEditor_Dijit, dataGridWidget double click on personnel</response> 
       <response id="4">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="242" sd="24" type="1" name="switch personnel 4">
   	 <description>This test case is used for testing switching personnel from grid</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be two or more personnels into the module)</action> 
       <action id="3">Edit at least one field, then duble click on another personnel from the grid</action>
       <action id="4">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">PersonnelEditor_Dijit, dataGridWidget double click on personnel</response> 
       <response id="4">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

   <testCase id="243" sd="17" type="1" name="delete personnel 1">
   	 <description>This test case is used for testing deleting personnel</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be one or more personnels into the module)</action> 
       <action id="3">Select a personnel and click on "Rimuovi personale"</action>
       <action id="4">Click on "Ok" on dialog panel</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">PersonnelEditor_Dijit, clicked remove personnel</response> 
       <response id="4">clicked ok on askForDeletion button</response>              
     </responses>
   </testCase>
   
   
    <testCase id="244" sd="17" type="1" name="delete personnel 2">
   	 <description>This test case is used for testing deleting personnel</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be one or more personnels into the module)</action> 
       <action id="3">Select a personnel and click on "Rimuovi personale"</action>
       <action id="4">Click on "Annulla" on dialog panel</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response> 
       <response id="3">PersonnelEditor_Dijit, clicked remove personnel</response> 
       <response id="4">clicked cancel on askForDeletion button</response>              
     </responses>
   </testCase>

    <testCase id="245" sd="23" type="1" name="change module">
   	 <description>This test case is used to testing the editing of personnel details</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be one or more personnels into the module)</action>        
       <action id="3">Edit at least one field, then click on "Dettagli Reparto" module</action>
       <action id="4">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response>
       <response id="3">changeFirstLevelModuleActive, moduleName:DepartmentDetailEditor</response>
       <response id="4">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

    <testCase id="246" sd="23" type="1" name="edit personnel details 1">
   	 <description>This test case is used to testing the editing of personnel details</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be one or more personnels into the module)</action>        
       <action id="3">Edit at least one field, then click on "Dettagli Reparto" module</action>
       <action id="4">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response>
       <response id="3">changeFirstLevelModuleActive, moduleName:DepartmentDetailEditor</response>
       <response id="4">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>


    <testCase id="247" sd="23" type="1" name="edit personnel details 2">
   	 <description>This test case is used to testing the editing of personnel details</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be one or more personnels into the module)</action>        
       <action id="3">Edit at least one field, then click on "Dettagli Reparto" module</action>
       <action id="4">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response>
       <response id="3">changeFirstLevelModuleActive, moduleName:DepartmentDetailEditor</response>
       <response id="4">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

    <testCase id="248" sd="23" type="1" name="edit personnel details 3">
   	 <description>This test case is used to testing the editing of personnel details</description>
     <requirements>
       <requirement>REQ-0402</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Personale" label on the left (must be one or more personnels into the module)</action>        
       <action id="3">Click on "Dettagli Reparto" module</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:PersonnelEditor</response>
       <response id="3">changeFirstLevelModuleActive, moduleName:DepartmentDetailEditor</response>
     </responses>
   </testCase>



   
<!--Turni-->

    <testCase id="249" sd="22" type="1" name="create new shift 1">
   	 <description>This test case is used for testing the creation of a new shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more personnels)</action> 
       <action id="3">Click "Aggiungi turno" button</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response> 
       <response id="3">clicked add shift button</response> 
     </responses>
   </testCase>

    <testCase id="250" sd="22" type="1" name="create new shift 2">
   	 <description>This test case is used for testing the creation of a new shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more personnels)</action> 
       <action id="3">Click "Aggiungi turno" button</action>
       <action id="4">Edit all fields, then click "Salva" button</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response> 
       <response id="3">clicked add shift button</response> 
       <response id="4">ShiftEditor.post saving shift data</response> 
     </responses>
   </testCase>

    <testCase id="251" sd="22" type="1" name="create new shift 3">
   	 <description>This test case is used for testing the creation of a new shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more personnels)</action> 
       <action id="3">Click "Aggiungi turno" button</action>
       <action id="4">Edit all fields,then click "Aggiungi turno" button</action>
       <action id="5">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response> 
       <response id="3">clicked add shift button</response> 
       <response id="4">clicked add shift button</response> 
       <response id="5">Clicked yes on modifiedDataConfirm dialog</response>
     </responses>
   </testCase>

    <testCase id="252" sd="22" type="1" name="create new shift 4">
   	 <description>This test case is used for testing the creation of a new shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more personnels)</action> 
       <action id="3">Click "Aggiungi turno" button</action>
       <action id="4">Edit at least one field,then click "Aggiungi turno" button</action>
       <action id="5">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response> 
       <response id="3">clicked add shift button</response> 
       <response id="4">clicked add shift button</response> 
       <response id="5">Clicked no on modifiedDataConfirm dialog</response>
     </responses>
   </testCase>
   

    <testCase id="253" sd="22" type="1" name="create new shift 5">
   	 <description>This test case is used for testing the creation of a new shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more personnels)</action> 
       <action id="3">Click "Aggiungi turno" button</action>
       <action id="4">Edit at least one field,then click "Aggiungi turno" button</action>
       <action id="5">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response> 
       <response id="3">clicked add shift button</response> 
       <response id="4">clicked add shift button</response> 
       <response id="5">Clicked cancel on modifiedDataConfirm dialog</response>
     </responses>
   </testCase>
   
   
    <testCase id="254" sd="22" type="1" name="create new shift 6">
   	 <description>This test case is used for testing the creation of a new shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more personnels)</action> 
       <action id="3">Edit at least one field,then click "Aggiungi turno" button</action>
       <action id="4">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response> 
       <response id="3">clicked add shift button</response> 
       <response id="4">Clicked yes on modifiedDataConfirm dialog</response>
     </responses>
   </testCase>

    <testCase id="255" sd="22" type="1" name="create new shift 7">
   	 <description>This test case is used for testing the creation of a new shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more personnels)</action> 
       <action id="3">Edit at least one field,then click "Aggiungi turno" button</action>
       <action id="4">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response> 
       <response id="3">clicked add shift button</response> 
       <response id="4">Clicked no on modifiedDataConfirm dialog</response>
     </responses>
   </testCase>
   

    <testCase id="256" sd="22" type="1" name="create new shift 8">
   	 <description>This test case is used for testing the creation of a new shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more personnels)</action> 
       <action id="3">Edit at least one field,then click "Aggiungi turno" button</action>
       <action id="4">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response> 
       <response id="3">clicked add shift button</response> 
       <response id="4">Clicked cancel on modifiedDataConfirm dialog</response>
     </responses>
   </testCase>
   
    <testCase id="257" sd="23" type="1" name="change module">
   	 <description>This test case is used to testing the editing of shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more shifts)</action> 
       <action id="3">Click on "Dettagli Reparto" module</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">changeFirstLevelModuleActive, moduleName:DepartmentDetailEditor</response>
     </responses>
   </testCase>


    <testCase id="258" sd="23" type="1" name="edit shift details 1">
   	 <description>This test case is used to testing the editing of shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more shifts)</action> 
       <action id="3">Edit at least one field, then click on "Dettagli Reparto" module</action>
       <action id="4">Click on "Si" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">changeFirstLevelModuleActive, moduleName:DepartmentDetailEditor</response>
       <response id="4">Clicked yes on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
    <testCase id="259" sd="23" type="1" name="edit shift details 2">
   	 <description>This test case is used to testing the editing of shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more shifts)</action> 
       <action id="3">Edit at least one field, then click on "Dettagli Reparto" module</action>
       <action id="4">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">changeFirstLevelModuleActive, moduleName:DepartmentDetailEditor</response>
       <response id="4">Clicked no on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>
   
    <testCase id="260" sd="23" type="1" name="edit shift details 3">
   	 <description>This test case is used to testing the editing of shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more shifts)</action> 
       <action id="3">Edit at least one field, then click on "Dettagli Reparto" module</action>
       <action id="4">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">changeFirstLevelModuleActive, moduleName:DepartmentDetailEditor</response>
       <response id="4">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>

    <testCase id="261" sd="24" type="1" name="switch shift 1">
   	 <description>This test case is used to testing switching shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be two or more shifts)</action> 
       <action id="3">Click on another shift on the calendar</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">switch to another shift</response>
     </responses>
   </testCase>

   
     <testCase id="262" sd="24" type="1" name="switch shift 2">
   	 <description>This test case is used to testing switching shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be two or more shifts)</action> 
       <action id="3">Edit at least one field, then click on another shift on the calendar</action>
       <action id="4">Click on "Si" on dialog panel and "Ok" on the next one</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">clicked another shift</response>
       <response id="4">Clicked yes on modifiedDataConfirm dialog, switch to another shift</response>              
     </responses>
   </testCase>

     <testCase id="263" sd="24" type="1" name="switch shift 3">
   	 <description>This test case is used to testing switching shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be two or more shifts)</action> 
       <action id="3">Edit at least one field, then click on another shift on the calendar</action>
       <action id="4">Click on "No" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">clicked another shift</response>
       <response id="4">Clicked no on modifiedDataConfirm dialog, switch to another shift</response>              
     </responses>
   </testCase>

     <testCase id="264" sd="24" type="1" name="switch shift 4">
   	 <description>This test case is used to testing switching shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be two or more shifts)</action> 
       <action id="3">Edit at least one field, then click on another shift on the calendar</action>
       <action id="4">Click on "Annulla" on dialog panel</action>       
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">clicked another shift</response>
       <response id="4">Clicked cancel on modifiedDataConfirm dialog</response>              
     </responses>
   </testCase>



    <testCase id="265" sd="21" type="1" name="navigate shift via calendar 1">
   	 <description>This test case is used to testing switching shift using little calendar</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be two or more shifts)</action> 
       <action id="3">Click on a shift date (better if not in the current visible week)</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">changed shift via calendar</response>
     </responses>
   </testCase>
   
    <testCase id="266" sd="20" type="1" name="change between moth and week view 1">
   	 <description>This test case is used to testing changing between month and week view</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left</action> 
       <action id="3">Ensure to be on week view clicking label "Settimana"</action>
       <action id="4">Click label "Mese"</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">currentView week, clicked week</response>
       <response id="4">currentView week, clicked month</response>
     </responses>
   </testCase>

    <testCase id="267" sd="20" type="1" name="change between moth and week view 2">
   	 <description>This test case is used to testing changing between month and week view</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left</action> 
       <action id="3">Ensure to be on week view clicking label "Settimana"</action>
       <action id="4">Click label "Settimana"</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">currentView week, clicked week</response>
       <response id="4">currentView week, clicked week</response>
     </responses>
   </testCase>

    <testCase id="268" sd="20" type="1" name="change between moth and week view 3">
   	 <description>This test case is used to testing changing between month and week view</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left</action> 
       <action id="3">Ensure to be on month view clicking label "Mese"</action>
       <action id="4">Click label "Mese"</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">currentView week, clicked month</response>
       <response id="4">currentView month, clicked month</response>
     </responses>
   </testCase>

    <testCase id="269" sd="20" type="1" name="change between moth and week view 4">
   	 <description>This test case is used to testing changing between month and week view</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left</action> 
       <action id="3">Ensure to be on month view clicking label "Mese"</action>
       <action id="4">Click label "Week"</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">currentView week, clicked month</response>
       <response id="4">currentView month, clicked week</response>
     </responses>
   </testCase>
   
   
   <testCase id="270" sd="17" type="1" name="delete shift 1">
   	 <description>This test case is used for testing deleting shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more shifts)</action> 
       <action id="3">Select a shift and click on "Rimuovi turno"</action>
       <action id="4">Click on "Ok" on dialog panel</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">ShiftEditor_Dijit, clicked remove shift</response> 
       <response id="4">clicked ok on askForDeletion button</response>              
     </responses>
   </testCase>
   
   
    <testCase id="271" sd="17" type="1" name="delete shift 2">
   	 <description>This test case is used for testing deleting shift</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left (must be one or more shifts)</action> 
       <action id="3">Select a personnel and click on "Rimuovi turno"</action>
       <action id="4">Click on "Annulla" on dialog panel</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">ShiftEditor_Dijit, clicked remove shift</response> 
       <response id="4">clicked cancel on askForDeletion button</response>              
     </responses>
   </testCase>
   
    <testCase id="272" sd="19" type="1" name="filtering shifts 1">
   	 <description>This test case is used for testing filtering shifts</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left</action> 
       <action id="3">Select the first label and click "Filtra calendario"</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">clicked shift filter button, personnelRole value:</response> 
     </responses>
   </testCase>
   
    <testCase id="273" sd="19" type="1" name="filtering shifts 2">
   	 <description>This test case is used for testing filtering shifts</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left</action> 
       <action id="3">Select the second label and click "Filtra calendario"</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">clicked shift filter button, personnelRole value:1</response> 
     </responses>
   </testCase>

    <testCase id="274" sd="19" type="1" name="filtering shifts 3">
   	 <description>This test case is used for testing filtering shifts</description>
     <requirements>
       <requirement>REQ-0403</requirement>
     </requirements> 
     <actions>
       <action id="1">Click on "Gestione reparto"</action>
       <action id="2">Click on "Turni" label on the left</action> 
       <action id="3">Select the second label and click "Filtra calendario"</action>
     </actions>
     <responses>
       <response id="1">show DepartmentDetailEditor module</response>
       <response id="2">changeFirstLevelModuleActive, moduleName:ShiftEditor</response>
       <response id="3">clicked shift filter button, personnelRole value:2</response> 
     </responses>
   </testCase>
   
<!--patient fiter-->   
   
    <testCase id="275" sd="25" type="1" name="search patient into grid">
   	 <description>This test case is used for testing searching a patient into grid</description>
     <requirements>
       <requirement>REQ-0503</requirement>
     </requirements> 
     <actions>
       <action id="1">Edit fiscalcode or surname field, then click on "Cerca Pazienti" button</action>
     </actions>
     <responses>
       <response id="1">Browser_Dijit, click SearchPatientButton, Browser_Dijit, filterPatientGrid</response>
     </responses>
   </testCase>

    <testCase id="276" sd="26" type="1" name="show all patients into grid">
   	 <description>This test case is used for testing showing all patients into grid</description>
     <requirements>
       <requirement>REQ-0503</requirement>
     </requirements> 
     <actions>
       <action id="1">Edit fiscalcode or surname field, then click on "Cerca Pazienti" button</action>
       <action id="2">Click on "Mostra Tutti" button</action>
     </actions>
     <responses>
       <response id="1">Browser_Dijit, click SearchPatientButton, Browser_Dijit, filterPatientGrid</response>
       <response id="2">Browser_Dijit, click showAllPatientsButton, Browser_Dijit, updatePatientGrid</response>
     </responses>
   </testCase>
   
   
  </testCases>
</Project>

<!--Project: id nome e version relative al progetto-->
<!--TestCase: id incrementale, sd (sequence diagram) codice relativo al sequence diagram che si sta testando-->
<!--Action e response: id incrementale che collega la response alla sua action-->
<!--La 'action' è il messaggio che appare all'utente o cmq si riferisce all'input del caso di test (in caso lo scenario di test sia senza user)-->
<!--La 'response' è l'oracolo, ovvero il risultato atteso. Quindi sarà relativo al log generato dal software testato-->
<!--Type: deve descrivere che tipologia di test si sta svolgendo e viene utilizzato per la gestione-->
<!--Requirement: legato alla lista dei requisiti presente in plan.io-->


<!-- 
   <testCase id="6" sd="4" type="3" name="openExistingPatient">
   	 <description>This test case is used for the opening of an existing patient.</description>
     <requirements>
       <requirement>REQ-0501</requirement>
     </requirements> 
     <actions>
       <action id="1">-x</action>
     </actions>
     <responses>
       <response id="1">end of onOpenPatient function of Controller.js</response>
     </responses>
   </testCase>
 -->
